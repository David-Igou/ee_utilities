---
# tasks file for ee_builder
- name: Build directory creation block.
  block:
    - name: Create temporary folder
      ansible.builtin.tempfile:
        state: directory
        suffix: temp
      register: build_dir

    - name: Set Build dir fact.
      ansible.builtin.set_fact:
        builder_dir: "{{ build_dir.path }}"

  when: builder_dir is not defined

- name: Pull builder images
  containers.podman.podman_image:
    name: "{{ item }}"
    username: "{{ base_registery_username | default(omit, true) }}"
    password: "{{ base_registery_password | default(omit, true) }}"
    validate_certs: "{{ ee_validate_certs | default(omit) }}"
    force: true
  loop:
    - "{{ ee_base_image }}"
    - "{{ ee_builder_image }}"
  when: ee_update_base_images

- name: ensure bindep file is rendered
  ansible.builtin.template:
    src: bindep.j2
    dest: "{{ builder_dir }}/{{ bindep_file }}"
    mode: '0644'
  when: __execution_environment_defintion.bindep is defined

- name: Ensure python file is rendered
  ansible.builtin.template:
    src: python.j2
    dest: "{{ builder_dir }}/{{ python_requirements_file }}"
    mode: '0644'
  when: __execution_environment_defintion.python is defined

- name: Ensure requiremets file is rendered
  ansible.builtin.template:
    src: requiremets.yaml.j2
    dest: "{{ builder_dir }}/{{ galaxy_requirements_file }}"
    mode: '0644'
  when: (__execution_environment_defintion.collections is defined) or (__execution_environment_defintion.roles is defined)

- name: Ensure ansible.cfg is rendered
  ansible.builtin.template:
    src: ansible.cfg.j2
    dest: "{{ builder_dir }}/ansible.cfg"
    mode: '0644'
  when: ee_create_ansible_config

- name: Create EE defefinition file
  ansible.builtin.template:
    src: execution_environment.yml.j2
    dest: "{{ builder_dir }}/execution_environment.yml"
    mode: '0644'

- name: Run the Ansible Builder Program
  ansible.builtin.command: "ansible-builder build -f {{ builder_dir }}/execution_environment.yml -t {{ __execution_environment_defintion.name }} --container-runtime={{ ee_container_runtime }} --prune-images {% if ee_galaxy_keyring is defined %} --galaxy-keyring={{ ee_galaxy_keyring }}{% endif %}"
  args:
    chdir: "{{ builder_dir }}/"
  changed_when: true   # these will always run and will always report “changed” otherwise

- name: Push image to registry
  containers.podman.podman_image:
    name: "{{ __execution_environment_defintion.name }}"
    pull: false
    push: true
    username: "{{ ee_registry_username | default(omit, true) }}"
    password: "{{ ee_registry_password | default(omit, true) }}"
    auth_file: "{{ ee_auth_file | default(omit, true) }}"
    executable: "{{ ee_executable | default(omit, true) }}"
    ca_cert_dir: "{{ ee_ca_cert_dir | default(omit) }}"
    validate_certs: "{{ ee_validate_certs | default(omit) }}"
    push_args:
      dest: "{{ ee_registry_dest }}"
      sign_by: "{{ ee_sign_by | default(omit) }}"
  when: ee_image_push

- name: Empty build directory
  ansible.builtin.file:
    state: absent
    path: "{{ build_dir.path | default( builder_dir ) }}"
  when: ee_builder_dir_clean
...
